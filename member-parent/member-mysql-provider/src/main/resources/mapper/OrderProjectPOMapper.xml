<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.firenay.leave.mapper.OrderProjectPOMapper" >

    <select id="selectOrderProjectVO" resultType="com.firenay.leave.entity.vo.OrderProjectVO">
		SELECT DISTINCT
			project_name projectName,
			content returnContent,
			`description_simple` launchName,
			t_return.`supportmoney` supportPrice,
			`freight` freight,
			`count` returnCount,
			`signalpurchase` signalPurchase,
			`purchase` purchase
		FROM t_project
			LEFT JOIN t_member_launch_info ON t_project.memberid = t_member_launch_info.memberid
			LEFT JOIN t_return ON t_project.id = t_return.projectid
		WHERE t_return.id = #{returnId}
	</select>

  <resultMap id="BaseResultMap" type="com.firenay.leave.entity.po.OrderProjectPO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="project_name" property="projectName" jdbcType="CHAR" />
    <result column="launch_name" property="launchName" jdbcType="CHAR" />
    <result column="return_content" property="returnContent" jdbcType="CHAR" />
    <result column="return_count" property="returnCount" jdbcType="INTEGER" />
    <result column="support_price" property="supportPrice" jdbcType="INTEGER" />
    <result column="freight" property="freight" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, project_name, launch_name, return_content, return_count, support_price, freight, 
    order_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.firenay.leave.entity.po.OrderProjectPOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order_project
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_order_project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order_project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.firenay.leave.entity.po.OrderProjectPOExample" >
    delete from t_order_project
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.firenay.leave.entity.po.OrderProjectPO" >
    insert into t_order_project (id, project_name, launch_name, 
      return_content, return_count, support_price, 
      freight, order_id)
    values (#{id,jdbcType=INTEGER}, #{projectName,jdbcType=CHAR}, #{launchName,jdbcType=CHAR}, 
      #{returnContent,jdbcType=CHAR}, #{returnCount,jdbcType=INTEGER}, #{supportPrice,jdbcType=INTEGER}, 
      #{freight,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.firenay.leave.entity.po.OrderProjectPO" >
    insert into t_order_project
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectName != null" >
        project_name,
      </if>
      <if test="launchName != null" >
        launch_name,
      </if>
      <if test="returnContent != null" >
        return_content,
      </if>
      <if test="returnCount != null" >
        return_count,
      </if>
      <if test="supportPrice != null" >
        support_price,
      </if>
      <if test="freight != null" >
        freight,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectName != null" >
        #{projectName,jdbcType=CHAR},
      </if>
      <if test="launchName != null" >
        #{launchName,jdbcType=CHAR},
      </if>
      <if test="returnContent != null" >
        #{returnContent,jdbcType=CHAR},
      </if>
      <if test="returnCount != null" >
        #{returnCount,jdbcType=INTEGER},
      </if>
      <if test="supportPrice != null" >
        #{supportPrice,jdbcType=INTEGER},
      </if>
      <if test="freight != null" >
        #{freight,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.firenay.leave.entity.po.OrderProjectPOExample" resultType="java.lang.Integer" >
    select count(*) from t_order_project
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_order_project
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectName != null" >
        project_name = #{record.projectName,jdbcType=CHAR},
      </if>
      <if test="record.launchName != null" >
        launch_name = #{record.launchName,jdbcType=CHAR},
      </if>
      <if test="record.returnContent != null" >
        return_content = #{record.returnContent,jdbcType=CHAR},
      </if>
      <if test="record.returnCount != null" >
        return_count = #{record.returnCount,jdbcType=INTEGER},
      </if>
      <if test="record.supportPrice != null" >
        support_price = #{record.supportPrice,jdbcType=INTEGER},
      </if>
      <if test="record.freight != null" >
        freight = #{record.freight,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_order_project
    set id = #{record.id,jdbcType=INTEGER},
      project_name = #{record.projectName,jdbcType=CHAR},
      launch_name = #{record.launchName,jdbcType=CHAR},
      return_content = #{record.returnContent,jdbcType=CHAR},
      return_count = #{record.returnCount,jdbcType=INTEGER},
      support_price = #{record.supportPrice,jdbcType=INTEGER},
      freight = #{record.freight,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.firenay.leave.entity.po.OrderProjectPO" >
    update t_order_project
    <set >
      <if test="projectName != null" >
        project_name = #{projectName,jdbcType=CHAR},
      </if>
      <if test="launchName != null" >
        launch_name = #{launchName,jdbcType=CHAR},
      </if>
      <if test="returnContent != null" >
        return_content = #{returnContent,jdbcType=CHAR},
      </if>
      <if test="returnCount != null" >
        return_count = #{returnCount,jdbcType=INTEGER},
      </if>
      <if test="supportPrice != null" >
        support_price = #{supportPrice,jdbcType=INTEGER},
      </if>
      <if test="freight != null" >
        freight = #{freight,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.firenay.leave.entity.po.OrderProjectPO" >
    update t_order_project
    set project_name = #{projectName,jdbcType=CHAR},
      launch_name = #{launchName,jdbcType=CHAR},
      return_content = #{returnContent,jdbcType=CHAR},
      return_count = #{returnCount,jdbcType=INTEGER},
      support_price = #{supportPrice,jdbcType=INTEGER},
      freight = #{freight,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>